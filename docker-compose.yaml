version: "3"

services:
  gcs:
    image: fsouza/fake-gcs-server
    command: -scheme both -port-http 8001 -public-host ${URL:-localhost}:8001
    ports:
      - "4443:4443"
      - "8001:8001"
    volumes:
      - ./data:/storage
    restart: always
    container_name: gcs
    networks:
      - custom_network

networks:
  custom_network:
    external: true


# version: "3"

# services:
#   minio:
#     image: minio/minio
#     ports:
#       - '9000:9000'
#       - '9001:9001'
#     environment:
#       - MINIO_ROOT_USER=minioadmin
#       - MINIO_ROOT_PASSWORD=minioadmin
#       - MINIO_DEFAULT_BUCKETS=tpp-videos
#     command: server /data
#     container_name: minio
#     volumes:
#       - minio_data:/data


#   ws-cli:
#     image: amazon/aws-cli
#     depends_on:
#       - localstack
#     environment:
#       - AWS_ACCESS_KEY_ID=minioadmin
#       - AWS_SECRET_ACCESS_KEY=minioadmin
#       - AWS_DEFAULT_REGION=us-east-1
#     entrypoint: /bin/sh -c
#     command: >
#       "
#         if ! aws --endpoint-url=http://minio:9000 s3api head-bucket --bucket tpp-videos 2>/dev/null; then
#           aws --endpoint-url=http://minio:9000 s3api create-bucket --bucket tpp-videos --region us-east-1;
#         fi;
#         echo 'Bucket exists or created successfully';
#       "

#   # mc:
#   #   image: minio/mc
#   #   container_name: mc
#   #   network_mode: host
#   #   entrypoint: >
#   #     /bin/sh -c "
#   #     /usr/bin/mc config host add minio http://127.0.0.1:9000 ACCESS SECRET;
#   #     /usr/bin/mc rm -r --force minio/psb-new;
#   #     /usr/bin/mc mb minio/psb-new;
#   #     /usr/bin/mc policy set public minio/psb-new;
#   #     exit 0;
#   #     "

# volumes:
#   minio_data:

# networks:
#   custom_network:
#     external: true
